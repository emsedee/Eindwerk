/*
Deployment script for DatabaseEindWerk

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "DatabaseEindWerk"
:setvar DefaultFilePrefix "DatabaseEindWerk"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL14.SQLEXPRESS\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL14.SQLEXPRESS\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
/*
The column [dbo].[Tablet].[Formaat] is being dropped, data loss could occur.

The column [dbo].[Tablet].[Gewicht] is being dropped, data loss could occur.

The column [dbo].[Tablet].[Kleur] is being dropped, data loss could occur.

The column [dbo].[Tablet].[OpslagCapaciteit] is being dropped, data loss could occur.

The column [dbo].[Tablet].[OpslageCapaciteit] is being dropped, data loss could occur.

The column [dbo].[Tablet].[ProcessorKernen] is being dropped, data loss could occur.

The column [dbo].[Tablet].[Processorsnelheid] is being dropped, data loss could occur.

The column [dbo].[Tablet].[Ramgeheugen] is being dropped, data loss could occur.
*/

IF EXISTS (select top 1 1 from [dbo].[Tablet])
    RAISERROR (N'Rows were detected. The schema update is terminating because data loss might occur.', 16, 127) WITH NOWAIT

GO
PRINT N'Dropping [dbo].[FK_Competentie_Niveau]...';


GO
ALTER TABLE [dbo].[Competentie] DROP CONSTRAINT [FK_Competentie_Niveau];


GO
PRINT N'Dropping [dbo].[FK_Bestellingen_Facturen]...';


GO
ALTER TABLE [dbo].[Bestellingen] DROP CONSTRAINT [FK_Bestellingen_Facturen];


GO
PRINT N'Dropping [dbo].[FK_Fotos_Interventies]...';


GO
ALTER TABLE [dbo].[Fotos] DROP CONSTRAINT [FK_Fotos_Interventies];


GO
PRINT N'Dropping [dbo].[FK_Bestellingen_Interventies]...';


GO
ALTER TABLE [dbo].[Bestellingen] DROP CONSTRAINT [FK_Bestellingen_Interventies];


GO
PRINT N'Dropping [dbo].[FK_Interventie competenties_Interventies]...';


GO
ALTER TABLE [dbo].[Interventie competenties] DROP CONSTRAINT [FK_Interventie competenties_Interventies];


GO
PRINT N'Dropping [dbo].[FK_Interventies_Prioriteit]...';


GO
ALTER TABLE [dbo].[Interventies] DROP CONSTRAINT [FK_Interventies_Prioriteit];


GO
PRINT N'Dropping [dbo].[FK_Interventies_Toestel]...';


GO
ALTER TABLE [dbo].[Interventies] DROP CONSTRAINT [FK_Interventies_Toestel];


GO
PRINT N'Dropping [dbo].[FK_Interventies_Bestellingen]...';


GO
ALTER TABLE [dbo].[Interventies] DROP CONSTRAINT [FK_Interventies_Bestellingen];


GO
PRINT N'Dropping [dbo].[FK_Interventies_Personeelsleden]...';


GO
ALTER TABLE [dbo].[Interventies] DROP CONSTRAINT [FK_Interventies_Personeelsleden];


GO
PRINT N'Dropping [dbo].[FK_Interventie competenties_Kennisgebieden]...';


GO
ALTER TABLE [dbo].[Interventie competenties] DROP CONSTRAINT [FK_Interventie competenties_Kennisgebieden];


GO
PRINT N'Dropping [dbo].[FK_Bestellingen_Leverancier]...';


GO
ALTER TABLE [dbo].[Bestellingen] DROP CONSTRAINT [FK_Bestellingen_Leverancier];


GO
PRINT N'Dropping [dbo].[FK_TabletPersoneelsLeden_Tablet]...';


GO
ALTER TABLE [dbo].[TabletPersoneelsLeden] DROP CONSTRAINT [FK_TabletPersoneelsLeden_Tablet];


GO
PRINT N'Dropping [dbo].[FK_Onderdelen_Toestel]...';


GO
ALTER TABLE [dbo].[Onderdelen] DROP CONSTRAINT [FK_Onderdelen_Toestel];


GO
PRINT N'Dropping [dbo].[FK_Toestel_Locatie]...';


GO
ALTER TABLE [dbo].[Toestel] DROP CONSTRAINT [FK_Toestel_Locatie];


GO
PRINT N'Starting rebuilding table [dbo].[Betrokkenheid]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Betrokkenheid] (
    [Interventie_id] INT      IDENTITY (1, 1) NOT NULL,
    [Personeels_id]  INT      NOT NULL,
    [Begin]          DATETIME NULL,
    [Einde]          DATETIME NULL,
    PRIMARY KEY CLUSTERED ([Interventie_id] ASC, [Personeels_id] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Betrokkenheid])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Betrokkenheid] ON;
        INSERT INTO [dbo].[tmp_ms_xx_Betrokkenheid] ([Interventie_id], [Personeels_id], [Begin], [Einde])
        SELECT   [Interventie_id],
                 [Personeels_id],
                 [Begin],
                 [Einde]
        FROM     [dbo].[Betrokkenheid]
        ORDER BY [Interventie_id] ASC, [Personeels_id] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Betrokkenheid] OFF;
    END

DROP TABLE [dbo].[Betrokkenheid];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Betrokkenheid]', N'Betrokkenheid';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[Competentie]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Competentie] (
    [Personeels_id]    INT        IDENTITY (1, 1) NOT NULL,
    [Specialisatie_id] INT        NOT NULL,
    [Niveau]           NCHAR (10) NULL,
    [Niveau_id]        INT        NULL,
    [Datum verworven]  DATETIME   NULL,
    PRIMARY KEY CLUSTERED ([Personeels_id] ASC, [Specialisatie_id] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Competentie])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Competentie] ON;
        INSERT INTO [dbo].[tmp_ms_xx_Competentie] ([Personeels_id], [Specialisatie_id], [Niveau], [Niveau_id], [Datum verworven])
        SELECT   [Personeels_id],
                 [Specialisatie_id],
                 [Niveau],
                 [Niveau_id],
                 [Datum verworven]
        FROM     [dbo].[Competentie]
        ORDER BY [Personeels_id] ASC, [Specialisatie_id] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Competentie] OFF;
    END

DROP TABLE [dbo].[Competentie];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Competentie]', N'Competentie';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[Facturen]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Facturen] (
    [Factuur_id]  INT      IDENTITY (1, 1) NOT NULL,
    [Datum]       DATETIME NULL,
    [VervalDatum] DATETIME NULL,
    PRIMARY KEY CLUSTERED ([Factuur_id] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Facturen])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Facturen] ON;
        INSERT INTO [dbo].[tmp_ms_xx_Facturen] ([Factuur_id], [Datum], [VervalDatum])
        SELECT   [Factuur_id],
                 [Datum],
                 [VervalDatum]
        FROM     [dbo].[Facturen]
        ORDER BY [Factuur_id] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Facturen] OFF;
    END

DROP TABLE [dbo].[Facturen];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Facturen]', N'Facturen';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[Fotos]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Fotos] (
    [Foto_id]        INT   IDENTITY (1, 1) NOT NULL,
    [Interventie_id] INT   NOT NULL,
    [image]          IMAGE NULL,
    PRIMARY KEY CLUSTERED ([Foto_id] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Fotos])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Fotos] ON;
        INSERT INTO [dbo].[tmp_ms_xx_Fotos] ([Foto_id], [Interventie_id])
        SELECT   [Foto_id],
                 [Interventie_id]
        FROM     [dbo].[Fotos]
        ORDER BY [Foto_id] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Fotos] OFF;
    END

DROP TABLE [dbo].[Fotos];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Fotos]', N'Fotos';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[Interventies]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Interventies] (
    [Interventie_id]              INT           IDENTITY (1, 1) NOT NULL,
    [Complexiteit]                VARCHAR (50)  NULL,
    [Meldingsdatum]               DATETIME      NULL,
    [Omschrijving]                VARCHAR (MAX) NULL,
    [Einddatum]                   DATETIME      NULL,
    [duur]                        DATETIME      NULL,
    [Verwachtteoplossingstermijn] DATETIME      NULL,
    [Omschrijving oplossing]      VARCHAR (MAX) NULL,
    [Personeels_id]               INT           NULL,
    [Prioriteit_id]               INT           NULL,
    [Toestel_id]                  INT           NULL,
    [Bestel_id]                   INT           NULL,
    [Soort interventie]           NVARCHAR (50) NULL,
    PRIMARY KEY CLUSTERED ([Interventie_id] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Interventies])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Interventies] ON;
        INSERT INTO [dbo].[tmp_ms_xx_Interventies] ([Interventie_id], [Complexiteit], [Meldingsdatum], [Omschrijving], [Einddatum], [duur], [Verwachtteoplossingstermijn], [Omschrijving oplossing], [Personeels_id], [Prioriteit_id], [Toestel_id], [Bestel_id], [Soort interventie])
        SELECT   [Interventie_id],
                 [Complexiteit],
                 [Meldingsdatum],
                 [Omschrijving],
                 [Einddatum],
                 [duur],
                 [Verwachtteoplossingstermijn],
                 [Omschrijving oplossing],
                 [Personeels_id],
                 [Prioriteit_id],
                 [Toestel_id],
                 [Bestel_id],
                 [Soort interventie]
        FROM     [dbo].[Interventies]
        ORDER BY [Interventie_id] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Interventies] OFF;
    END

DROP TABLE [dbo].[Interventies];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Interventies]', N'Interventies';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[Kennisgebieden]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Kennisgebieden] (
    [Specialisatie_id]   INT           IDENTITY (1, 1) NOT NULL,
    [Korte omschrijving] VARCHAR (50)  NULL,
    [Lange omschrijving] VARCHAR (MAX) NULL,
    [Soort kennisgebied] NCHAR (10)    NULL,
    PRIMARY KEY CLUSTERED ([Specialisatie_id] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Kennisgebieden])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Kennisgebieden] ON;
        INSERT INTO [dbo].[tmp_ms_xx_Kennisgebieden] ([Specialisatie_id], [Korte omschrijving], [Lange omschrijving], [Soort kennisgebied])
        SELECT   [Specialisatie_id],
                 [Korte omschrijving],
                 [Lange omschrijving],
                 [Soort kennisgebied]
        FROM     [dbo].[Kennisgebieden]
        ORDER BY [Specialisatie_id] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Kennisgebieden] OFF;
    END

DROP TABLE [dbo].[Kennisgebieden];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Kennisgebieden]', N'Kennisgebieden';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[Leverancier]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Leverancier] (
    [Leveranciers_id] INT           IDENTITY (1, 1) NOT NULL,
    [Naam]            VARCHAR (50)  NULL,
    [Telefoon]        VARCHAR (50)  NULL,
    [Email]           VARCHAR (50)  NULL,
    [Website]         VARCHAR (MAX) NULL,
    [Straat]          VARCHAR (50)  NULL,
    [Huisnummer]      VARCHAR (50)  NULL,
    [Postcode]        VARCHAR (50)  NULL,
    [Stad]            VARCHAR (50)  NULL,
    PRIMARY KEY CLUSTERED ([Leveranciers_id] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Leverancier])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Leverancier] ON;
        INSERT INTO [dbo].[tmp_ms_xx_Leverancier] ([Leveranciers_id], [Naam], [Telefoon], [Email], [Website], [Straat], [Huisnummer], [Postcode], [Stad])
        SELECT   [Leveranciers_id],
                 [Naam],
                 [Telefoon],
                 [Email],
                 [Website],
                 [Straat],
                 [Huisnummer],
                 [Postcode],
                 [Stad]
        FROM     [dbo].[Leverancier]
        ORDER BY [Leveranciers_id] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Leverancier] OFF;
    END

DROP TABLE [dbo].[Leverancier];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Leverancier]', N'Leverancier';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[Niveau]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Niveau] (
    [Niveau_id] INT          IDENTITY (1, 1) NOT NULL,
    [Beginner]  VARCHAR (50) NULL,
    [Ervaren]   VARCHAR (50) NULL,
    [Expert]    VARCHAR (50) NULL,
    PRIMARY KEY CLUSTERED ([Niveau_id] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Niveau])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Niveau] ON;
        INSERT INTO [dbo].[tmp_ms_xx_Niveau] ([Niveau_id], [Beginner], [Ervaren], [Expert])
        SELECT   [Niveau_id],
                 [Beginner],
                 [Ervaren],
                 [Expert]
        FROM     [dbo].[Niveau]
        ORDER BY [Niveau_id] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Niveau] OFF;
    END

DROP TABLE [dbo].[Niveau];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Niveau]', N'Niveau';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[Prioriteit]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Prioriteit] (
    [Prioriteit_id] INT        IDENTITY (1, 1) NOT NULL,
    [Gewoon]        NCHAR (10) NULL,
    [Dringend]      NCHAR (10) NULL,
    [Zeer Dringen]  NCHAR (10) NULL,
    [Hoog Dringend] NCHAR (10) NULL,
    PRIMARY KEY CLUSTERED ([Prioriteit_id] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Prioriteit])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Prioriteit] ON;
        INSERT INTO [dbo].[tmp_ms_xx_Prioriteit] ([Prioriteit_id], [Gewoon], [Dringend], [Zeer Dringen], [Hoog Dringend])
        SELECT   [Prioriteit_id],
                 [Gewoon],
                 [Dringend],
                 [Zeer Dringen],
                 [Hoog Dringend]
        FROM     [dbo].[Prioriteit]
        ORDER BY [Prioriteit_id] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Prioriteit] OFF;
    END

DROP TABLE [dbo].[Prioriteit];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Prioriteit]', N'Prioriteit';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[Tablet]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Tablet] (
    [Tablet_id]          INT          IDENTITY (1, 1) NOT NULL,
    [Prijs]              INT          NULL,
    [Merk]               VARCHAR (50) NULL,
    [BesturingsSysteeem] VARCHAR (50) NULL,
    [SchermType]         VARCHAR (50) NULL,
    [Resolutie]          INT          NULL,
    PRIMARY KEY CLUSTERED ([Tablet_id] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Tablet])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Tablet] ON;
        INSERT INTO [dbo].[tmp_ms_xx_Tablet] ([Tablet_id], [Prijs], [Merk], [BesturingsSysteeem], [SchermType], [Resolutie])
        SELECT   [Tablet_id],
                 [Prijs],
                 [Merk],
                 [BesturingsSysteeem],
                 [SchermType],
                 [Resolutie]
        FROM     [dbo].[Tablet]
        ORDER BY [Tablet_id] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Tablet] OFF;
    END

DROP TABLE [dbo].[Tablet];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Tablet]', N'Tablet';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Starting rebuilding table [dbo].[Toestel]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Toestel] (
    [Toestel_id]        INT           IDENTITY (1, 1) NOT NULL,
    [Naam]              VARCHAR (50)  NULL,
    [Merk]              VARCHAR (50)  NULL,
    [Keuring]           DATETIME      NULL,
    [Ouderdom]          INT           NULL,
    [Omschrijving]      VARCHAR (MAX) NULL,
    [Formaat]           INT           NULL,
    [Maximum gewicht]   INT           NULL,
    [Type matras]       VARCHAR (50)  NULL,
    [Type aandrijving]  VARCHAR (50)  NULL,
    [Opplooibaar]       BIT           NULL,
    [Verstelbaar]       BIT           NULL,
    [Materie]           VARCHAR (50)  NULL,
    [DatumAfschrijving] DATETIME      NULL,
    [Locatie_id]        INT           NULL,
    [Soort toestel]     NVARCHAR (50) NULL,
    PRIMARY KEY CLUSTERED ([Toestel_id] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Toestel])
    BEGIN
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Toestel] ON;
        INSERT INTO [dbo].[tmp_ms_xx_Toestel] ([Toestel_id], [Naam], [Merk], [Keuring], [Ouderdom], [Omschrijving], [Formaat], [Maximum gewicht], [Type matras], [Type aandrijving], [Opplooibaar], [Verstelbaar], [Materie], [DatumAfschrijving], [Locatie_id], [Soort toestel])
        SELECT   [Toestel_id],
                 [Naam],
                 [Merk],
                 [Keuring],
                 [Ouderdom],
                 [Omschrijving],
                 [Formaat],
                 [Maximum gewicht],
                 [Type matras],
                 [Type aandrijving],
                 [Opplooibaar],
                 [Verstelbaar],
                 [Materie],
                 [DatumAfschrijving],
                 [Locatie_id],
                 [Soort toestel]
        FROM     [dbo].[Toestel]
        ORDER BY [Toestel_id] ASC;
        SET IDENTITY_INSERT [dbo].[tmp_ms_xx_Toestel] OFF;
    END

DROP TABLE [dbo].[Toestel];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Toestel]', N'Toestel';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating [dbo].[FK_Competentie_Niveau]...';


GO
ALTER TABLE [dbo].[Competentie] WITH NOCHECK
    ADD CONSTRAINT [FK_Competentie_Niveau] FOREIGN KEY ([Niveau_id]) REFERENCES [dbo].[Niveau] ([Niveau_id]);


GO
PRINT N'Creating [dbo].[FK_Bestellingen_Facturen]...';


GO
ALTER TABLE [dbo].[Bestellingen] WITH NOCHECK
    ADD CONSTRAINT [FK_Bestellingen_Facturen] FOREIGN KEY ([Factuur_id]) REFERENCES [dbo].[Facturen] ([Factuur_id]);


GO
PRINT N'Creating [dbo].[FK_Fotos_Interventies]...';


GO
ALTER TABLE [dbo].[Fotos] WITH NOCHECK
    ADD CONSTRAINT [FK_Fotos_Interventies] FOREIGN KEY ([Interventie_id]) REFERENCES [dbo].[Interventies] ([Interventie_id]);


GO
PRINT N'Creating [dbo].[FK_Bestellingen_Interventies]...';


GO
ALTER TABLE [dbo].[Bestellingen] WITH NOCHECK
    ADD CONSTRAINT [FK_Bestellingen_Interventies] FOREIGN KEY ([Interventie_id]) REFERENCES [dbo].[Interventies] ([Interventie_id]);


GO
PRINT N'Creating [dbo].[FK_Interventie competenties_Interventies]...';


GO
ALTER TABLE [dbo].[Interventie competenties] WITH NOCHECK
    ADD CONSTRAINT [FK_Interventie competenties_Interventies] FOREIGN KEY ([Interventie_id]) REFERENCES [dbo].[Interventies] ([Interventie_id]);


GO
PRINT N'Creating [dbo].[FK_Interventies_Prioriteit]...';


GO
ALTER TABLE [dbo].[Interventies] WITH NOCHECK
    ADD CONSTRAINT [FK_Interventies_Prioriteit] FOREIGN KEY ([Prioriteit_id]) REFERENCES [dbo].[Prioriteit] ([Prioriteit_id]);


GO
PRINT N'Creating [dbo].[FK_Interventies_Toestel]...';


GO
ALTER TABLE [dbo].[Interventies] WITH NOCHECK
    ADD CONSTRAINT [FK_Interventies_Toestel] FOREIGN KEY ([Toestel_id]) REFERENCES [dbo].[Toestel] ([Toestel_id]);


GO
PRINT N'Creating [dbo].[FK_Interventies_Bestellingen]...';


GO
ALTER TABLE [dbo].[Interventies] WITH NOCHECK
    ADD CONSTRAINT [FK_Interventies_Bestellingen] FOREIGN KEY ([Bestel_id]) REFERENCES [dbo].[Bestellingen] ([Bestel_id]);


GO
PRINT N'Creating [dbo].[FK_Interventies_Personeelsleden]...';


GO
ALTER TABLE [dbo].[Interventies] WITH NOCHECK
    ADD CONSTRAINT [FK_Interventies_Personeelsleden] FOREIGN KEY ([Personeels_id]) REFERENCES [dbo].[Personeelsleden] ([Personeels_id]);


GO
PRINT N'Creating [dbo].[FK_Interventie competenties_Kennisgebieden]...';


GO
ALTER TABLE [dbo].[Interventie competenties] WITH NOCHECK
    ADD CONSTRAINT [FK_Interventie competenties_Kennisgebieden] FOREIGN KEY ([Specialisatie_id]) REFERENCES [dbo].[Kennisgebieden] ([Specialisatie_id]);


GO
PRINT N'Creating [dbo].[FK_Bestellingen_Leverancier]...';


GO
ALTER TABLE [dbo].[Bestellingen] WITH NOCHECK
    ADD CONSTRAINT [FK_Bestellingen_Leverancier] FOREIGN KEY ([Leveranciers_id]) REFERENCES [dbo].[Leverancier] ([Leveranciers_id]);


GO
PRINT N'Creating [dbo].[FK_TabletPersoneelsLeden_Tablet]...';


GO
ALTER TABLE [dbo].[TabletPersoneelsLeden] WITH NOCHECK
    ADD CONSTRAINT [FK_TabletPersoneelsLeden_Tablet] FOREIGN KEY ([Tablet_id]) REFERENCES [dbo].[Tablet] ([Tablet_id]);


GO
PRINT N'Creating [dbo].[FK_Onderdelen_Toestel]...';


GO
ALTER TABLE [dbo].[Onderdelen] WITH NOCHECK
    ADD CONSTRAINT [FK_Onderdelen_Toestel] FOREIGN KEY ([Toestel_id]) REFERENCES [dbo].[Toestel] ([Toestel_id]);


GO
PRINT N'Creating [dbo].[FK_Toestel_Locatie]...';


GO
ALTER TABLE [dbo].[Toestel] WITH NOCHECK
    ADD CONSTRAINT [FK_Toestel_Locatie] FOREIGN KEY ([Locatie_id]) REFERENCES [dbo].[Locatie] ([Locatie_id]);


GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[Competentie] WITH CHECK CHECK CONSTRAINT [FK_Competentie_Niveau];

ALTER TABLE [dbo].[Bestellingen] WITH CHECK CHECK CONSTRAINT [FK_Bestellingen_Facturen];

ALTER TABLE [dbo].[Fotos] WITH CHECK CHECK CONSTRAINT [FK_Fotos_Interventies];

ALTER TABLE [dbo].[Bestellingen] WITH CHECK CHECK CONSTRAINT [FK_Bestellingen_Interventies];

ALTER TABLE [dbo].[Interventie competenties] WITH CHECK CHECK CONSTRAINT [FK_Interventie competenties_Interventies];

ALTER TABLE [dbo].[Interventies] WITH CHECK CHECK CONSTRAINT [FK_Interventies_Prioriteit];

ALTER TABLE [dbo].[Interventies] WITH CHECK CHECK CONSTRAINT [FK_Interventies_Toestel];

ALTER TABLE [dbo].[Interventies] WITH CHECK CHECK CONSTRAINT [FK_Interventies_Bestellingen];

ALTER TABLE [dbo].[Interventies] WITH CHECK CHECK CONSTRAINT [FK_Interventies_Personeelsleden];

ALTER TABLE [dbo].[Interventie competenties] WITH CHECK CHECK CONSTRAINT [FK_Interventie competenties_Kennisgebieden];

ALTER TABLE [dbo].[Bestellingen] WITH CHECK CHECK CONSTRAINT [FK_Bestellingen_Leverancier];

ALTER TABLE [dbo].[TabletPersoneelsLeden] WITH CHECK CHECK CONSTRAINT [FK_TabletPersoneelsLeden_Tablet];

ALTER TABLE [dbo].[Onderdelen] WITH CHECK CHECK CONSTRAINT [FK_Onderdelen_Toestel];

ALTER TABLE [dbo].[Toestel] WITH CHECK CHECK CONSTRAINT [FK_Toestel_Locatie];


GO
PRINT N'Update complete.';


GO
